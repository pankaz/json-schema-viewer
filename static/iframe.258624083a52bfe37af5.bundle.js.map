{"version":3,"file":"static/iframe.258624083a52bfe37af5.bundle.js","sources":["webpack:///./.storybook/config.js","webpack:///./.storybook/theme.js","webpack:///./node_modules/nested-object-assign/lib sync ^\\.\\/.*$","webpack:///./src/JsonSchemaViewer.tsx","webpack:///./src/PropValidations.tsx","webpack:///./src/SchemaView.tsx","webpack:///./src/__stories__/JsonSchemaViewer.tsx","webpack:///./src/__stories__/index.ts","webpack:///./src/common/ErrorMessage.tsx","webpack:///./src/common/MutedText.tsx","webpack:///./src/common/Row.tsx","webpack:///./src/common/RowType.tsx","webpack:///./src/consts.ts","webpack:///./src/renderers/renderAllOf.tsx","webpack:///./src/renderers/renderCombiner.tsx","webpack:///./src/renderers/renderProp.tsx","webpack:///./src/renderers/renderProps.tsx","webpack:///./src/renderers/renderRowDivider.tsx","webpack:///./src/renderers/renderSchema.tsx","webpack:///./src/theme.ts","webpack:///./src/util/buildAllOfSchema.ts","webpack:///./src/util/getProps.ts","webpack:///./src/util/isCombiner.ts","webpack:///./src/util/isSchemaViewerEmpty.ts","webpack:///./src/util/pickValidations.ts","webpack:///./src/util/validationText.ts"],"sourcesContent":["import '@stoplight/storybook-config/config';\n","import { createThemedModule } from '@stoplight/ui-kit';\n\nconst { useTheme, ThemeProvider } = createThemedModule();\n\nexport { useTheme, ThemeProvider };\n\nexport const themes = ['dark', 'light'];\n\nexport const zones = {\n  'json-schema-viewer': ({ base }) =>\n    base === 'dark'\n      ? {\n          canvas: {\n            bg: '#111',\n            fg: '#fff',\n            error: 'red',\n            muted: 'rgba(255, 255, 255, 0.6)',\n          },\n\n          divider: {\n            bg: '#bababa',\n          },\n\n          row: {\n            hoverBg: '#333',\n            hoverFg: '#fff',\n            evenBg: '#232222',\n          },\n\n          types: {\n            object: '#83c1ff',\n            array: '#7dff75',\n            allOf: '#b89826',\n            oneOf: '#b89826',\n            anyOf: '#b89826',\n            null: '#ff7f50',\n            integer: '#e03b36',\n            number: '#e03b36',\n            boolean: '#ff69b4',\n            binary: '#8ccda3',\n            string: '#19c5a0',\n            $ref: '#a359e2',\n          },\n        }\n      : {\n          canvas: {\n            bg: '#fff',\n            fg: '#111',\n            error: 'red',\n            muted: 'rgba(0, 0, 0, 0.5)',\n          },\n\n          divider: {\n            bg: '#dae1e7',\n          },\n\n          row: {\n            hoverBg: '#e9e9e9',\n            hoverFg: '#111',\n            evenBg: '#f3f3f3',\n          },\n\n          types: {\n            object: '#00f',\n            array: '#008000',\n            allOf: '#B8860B',\n            oneOf: '#B8860B',\n            anyOf: '#B8860B',\n            null: '#ff7f50',\n            integer: '#a52a2a',\n            number: '#a52a2a',\n            boolean: '#ff69b4',\n            binary: '#66cdaa',\n            string: '#008080',\n            $ref: '#8a2be2',\n          },\n        },\n};\n","var map = {\n\t\"./nestedObjectAssign\": \"./node_modules/nested-object-assign/lib/nestedObjectAssign.js\",\n\t\"./nestedObjectAssign.js\": \"./node_modules/nested-object-assign/lib/nestedObjectAssign.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/nested-object-assign/lib sync recursive ^\\\\.\\\\/.*$\";","/* @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { Omit } from '@stoplight/types';\nimport { Component } from 'react';\nimport { ErrorMessage } from './common/ErrorMessage';\nimport { MutedText } from './common/MutedText';\nimport { ISchemaView, SchemaView } from './SchemaView';\nimport { ThemeZone } from './theme';\nimport { isSchemaViewerEmpty } from './util/isSchemaViewerEmpty';\n\nexport interface IJsonSchemaViewer extends Omit<ISchemaView, 'emptyText'> {\n  emptyText?: string;\n}\n\nexport interface IJsonSchemaViewerState {\n  error: null | string;\n}\n\nexport class JsonSchemaViewer extends Component<IJsonSchemaViewer, IJsonSchemaViewerState> {\n  public state = {\n    error: null,\n  };\n\n  // there is no error hook yet, see https://reactjs.org/docs/hooks-faq.html#how-do-lifecycle-methods-correspond-to-hooks\n  public static getDerivedStateFromError(error: Error): { error: IJsonSchemaViewerState['error'] } {\n    return { error: `Error rendering schema. ${error.message}` };\n  }\n\n  public render() {\n    const {\n      props: {\n        emptyText = 'No schema defined',\n        name,\n        schema,\n        schemas,\n        limitPropertyCount,\n        hideRoot,\n        expanded,\n        defaultExpandedDepth,\n        hideInheritedFrom,\n        ...props\n      },\n      state: { error },\n    } = this;\n\n    if (error) {\n      return (\n        <ThemeZone name=\"json-schema-viewer\">\n          <ErrorMessage>{error}</ErrorMessage>\n        </ThemeZone>\n      );\n    }\n\n    // an empty array or object is still a valid response, schema is ONLY really empty when a combiner type has no information\n    if (isSchemaViewerEmpty(schema)) {\n      return (\n        <ThemeZone name=\"json-schema-viewer\">\n          <MutedText>{emptyText}</MutedText>\n        </ThemeZone>\n      );\n    }\n\n    return (\n      <ThemeZone name=\"json-schema-viewer\">\n        <SchemaView\n          emptyText={emptyText}\n          defaultExpandedDepth={defaultExpandedDepth}\n          expanded={expanded}\n          hideInheritedFrom={hideInheritedFrom}\n          hideRoot={hideRoot}\n          limitPropertyCount={limitPropertyCount}\n          name={name}\n          schema={schema}\n          schemas={schemas}\n          {...props}\n        />\n      </ThemeZone>\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    JsonSchemaViewer.displayName = \"JsonSchemaViewer\";\n    // @ts-ignore\n    JsonSchemaViewer.__docgenInfo = { \"description\": \"\", \"displayName\": \"JsonSchemaViewer\", \"props\": { \"emptyText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"emptyText\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/JsonSchemaViewer.tsx#JsonSchemaViewer\"] = { docgenInfo: JsonSchemaViewer.__docgenInfo, name: \"JsonSchemaViewer\", path: \"src/JsonSchemaViewer.tsx#JsonSchemaViewer\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { safeStringify } from '@stoplight/json';\nimport { ISchema } from '@stoplight/types';\nimport * as React from 'react';\nimport { MutedText } from './common/MutedText';\nimport { isCombiner } from './util/isCombiner';\nimport { pickValidations } from './util/pickValidations';\n\nexport const PropValidations: React.FunctionComponent<{ prop: ISchema }> = ({ prop }) => {\n  if (!isCombiner(prop)) {\n    const validations = pickValidations(prop);\n\n    return (\n      <>\n        {Object.entries(validations).map(([k, v]) => {\n          let type = typeof v;\n\n          if (k === 'default' && ['object', 'boolean'].includes(type)) {\n            v = safeStringify(v);\n\n            type = typeof v;\n          }\n\n          if (type === 'boolean') {\n            return (\n              <div key={k}>\n                <MutedText as=\"b\">{k}:</MutedText> {v.toString()}\n              </div>\n            );\n          }\n\n          if (type !== 'object') {\n            return (\n              <div key={k}>\n                <MutedText as=\"b\">{k}:</MutedText> {v}\n              </div>\n            );\n          }\n\n          return null;\n        })}\n      </>\n    );\n  }\n\n  return null;\n};\ntry {\n    // @ts-ignore\n    PropValidations.displayName = \"PropValidations\";\n    // @ts-ignore\n    PropValidations.__docgenInfo = { \"description\": \"\", \"displayName\": \"PropValidations\", \"props\": { \"prop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"prop\", \"required\": true, \"type\": { \"name\": \"ISchema\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/PropValidations.tsx#PropValidations\"] = { docgenInfo: PropValidations.__docgenInfo, name: \"PropValidations\", path: \"src/PropValidations.tsx#PropValidations\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","/* @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { Dictionary, ISchema } from '@stoplight/types';\nimport { Box, Button, IBox } from '@stoplight/ui-kit';\nimport dropRight = require('lodash/dropRight');\nimport { FunctionComponent, MouseEventHandler, ReactNodeArray, useCallback, useState } from 'react';\nimport { MutedText } from './common/MutedText';\nimport { renderSchema } from './renderers/renderSchema';\nimport { useTheme } from './theme';\nimport { buildAllOfSchema } from './util/buildAllOfSchema';\n\nexport interface ISchemaViewProps {\n  name?: string;\n  defaultExpandedDepth?: number;\n  schemas: object;\n  schema: ISchema;\n  limitPropertyCount?: number;\n  hideRoot?: boolean;\n  expanded?: boolean;\n  hideInheritedFrom?: boolean;\n  emptyText: string;\n}\n\nexport interface ISchemaView extends ISchemaViewProps, IBox {}\n\nexport const SchemaView: FunctionComponent<ISchemaView> = props => {\n  const {\n    defaultExpandedDepth = 1,\n    emptyText,\n    expanded = false,\n    hideInheritedFrom = false,\n    hideRoot,\n    limitPropertyCount = 0,\n    schema,\n    schemas = {},\n    ...rest\n  } = props;\n\n  const theme = useTheme();\n  const [showExtra, setShowExtra] = useState<boolean>(false);\n  const [expandedRows, setExpandedRows] = useState<Dictionary<boolean>>({ all: expanded });\n\n  const toggleExpandRow = useCallback<(rowKey: string, expanded: boolean) => void>(\n    (rowKey, expandRow) => {\n      setExpandedRows({ ...expandedRows, [rowKey]: expandRow });\n    },\n    [expandedRows]\n  );\n\n  const toggleShowExtra = useCallback<MouseEventHandler<HTMLElement>>(\n    () => {\n      setShowExtra(!showExtra);\n    },\n    [showExtra]\n  );\n\n  let actualSchema = schema;\n\n  if (\n    !actualSchema ||\n    !Object.keys(actualSchema).length ||\n    (actualSchema.properties && !Object.keys(actualSchema.properties).length)\n  ) {\n    return <MutedText>{emptyText}</MutedText>;\n  }\n\n  if (actualSchema.allOf) {\n    const schemaProps = actualSchema.allOf;\n\n    if (actualSchema.type) schemaProps.push({ type: actualSchema.type });\n\n    actualSchema = buildAllOfSchema(schemaProps);\n  }\n\n  let rowElems: ReactNodeArray = [];\n\n  renderSchema({\n    schemas,\n    expandedRows,\n    defaultExpandedDepth,\n    schema: actualSchema,\n    level: hideRoot && (actualSchema.type === 'object' || actualSchema.hasOwnProperty('allOf')) ? -1 : 0,\n    name: 'root',\n    rowElems,\n    toggleExpandRow,\n    hideInheritedFrom,\n    jsonPath: 'root',\n    hideRoot,\n  });\n\n  const propOverflowCount = rowElems.length - Math.max(0, limitPropertyCount);\n\n  if (limitPropertyCount && !showExtra && propOverflowCount > 0) {\n    rowElems = dropRight(rowElems, propOverflowCount);\n  }\n\n  if (rowElems.length === 0) {\n    return <MutedText>{emptyText}</MutedText>;\n  }\n\n  return (\n    <Box backgroundColor={theme.canvas.bg} color={theme.canvas.fg} {...rest}>\n      {rowElems}\n      {showExtra || (limitPropertyCount > 0 && propOverflowCount > 0) ? (\n        <Button onClick={toggleShowExtra}>\n          {showExtra ? 'collapse' : `...show ${propOverflowCount} more properties`}\n        </Button>\n      ) : null}\n    </Box>\n  );\n};\ntry {\n    // @ts-ignore\n    SchemaView.displayName = \"SchemaView\";\n    // @ts-ignore\n    SchemaView.__docgenInfo = { \"description\": \"\", \"displayName\": \"SchemaView\", \"props\": { \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"defaultExpandedDepth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"defaultExpandedDepth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"schemas\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schemas\", \"required\": true, \"type\": { \"name\": \"object\" } }, \"schema\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schema\", \"required\": true, \"type\": { \"name\": \"ISchema\" } }, \"limitPropertyCount\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"limitPropertyCount\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"hideRoot\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideRoot\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"expanded\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"expanded\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hideInheritedFrom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideInheritedFrom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"emptyText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"emptyText\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"as\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"as\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"CSSProperties\" } }, \"css\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"css\", \"required\": false, \"type\": { \"name\": \"IBoxCSS\" } }, \"backgroundColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"backgroundColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecoration\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecoration\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecorationColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecorationColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textTransform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textTransform\", \"required\": false, \"type\": { \"name\": \"TextTransformProperty\" } }, \"textOverflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textOverflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"whiteSpace\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"whiteSpace\", \"required\": false, \"type\": { \"name\": \"WhiteSpaceProperty\" } }, \"visibility\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"visibility\", \"required\": false, \"type\": { \"name\": \"VisibilityProperty\" } }, \"overflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overflowX\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowX\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"overflowY\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowY\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"cursor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"cursor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"border\": { \"defaultValue\": null, \"description\": \"The border CSS property sets an element's border. It's a shorthand for border-width, border-style,\\nand border-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border)\", \"name\": \"border\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderTop\": { \"defaultValue\": null, \"description\": \"The border-top CSS property is a shorthand that sets the values of border-top-width, border-top-style,\\nand border-top-color. These properties describe an element's top border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-top)\", \"name\": \"borderTop\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderBottom\": { \"defaultValue\": null, \"description\": \"The border-bottom CSS property sets an element's bottom border. It's a shorthand for\\nborder-bottom-width, border-bottom-style and border-bottom-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom)\", \"name\": \"borderBottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderLeft\": { \"defaultValue\": null, \"description\": \"The border-left CSS property is a shorthand that sets the values of border-left-width,\\nborder-left-style, and border-left-color. These properties describe an element's left border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-left)\", \"name\": \"borderLeft\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRight\": { \"defaultValue\": null, \"description\": \"The border-right CSS property is a shorthand that sets border-right-width, border-right-style,\\nand border-right-color. These properties set an element's right border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-right)\", \"name\": \"borderRight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRadius\": { \"defaultValue\": null, \"description\": \"The border-radius CSS property rounds the corners of an element's outer border edge. You can set a single\\nradius to make circular corners, or two radii to make elliptical corners.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)\", \"name\": \"borderRadius\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxShadow\": { \"defaultValue\": null, \"description\": \"The box-shadow CSS property adds shadow effects around an element's frame. You can set multiple effects\\nseparated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread\\nradii, and color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow)\", \"name\": \"boxShadow\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxSizing\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"boxSizing\", \"required\": false, \"type\": { \"name\": \"BoxSizingProperty\" } }, \"display\": { \"defaultValue\": null, \"description\": \"The display CSS property defines the display type of an element, which consists of the two basic qualities\\nof how an element generates boxes \\u2014 the outer display type defining how the box participates in flow layout,\\nand the inner display type defining how the children of the box are laid out.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"display\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"fontSize\": { \"defaultValue\": null, \"description\": \"The fontSize utility parses a component's `fontSize` prop and converts it into a CSS font-size declaration.\\n\\n- Numbers from 0-8 (or `theme.fontSizes.length`) are converted to values on the [font size scale](#default-theme).\\n- Numbers greater than `theme.fontSizes.length` are converted to raw pixel values.\\n- String values are passed as raw CSS values.\\n- And array values are converted into responsive values.\", \"name\": \"fontSize\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"fontWeight\": { \"defaultValue\": null, \"description\": \"The font-weight CSS property specifies the weight (or boldness) of the font.\\n\\nThe font weights available to you will depend on the font-family you are using. Some fonts are only available in normal and bold.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight)\", \"name\": \"fontWeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<FontWeightProperty>\" } }, \"fontStyle\": { \"defaultValue\": null, \"description\": \"The font-style CSS property specifies whether a font should be styled with a normal, italic,\\nor oblique face from its font-family.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style)\", \"name\": \"fontStyle\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"lineHeight\": { \"defaultValue\": null, \"description\": \"The line-height CSS property sets the amount of space used for lines, such as in text. On block-level elements,\\nit specifies the minimum height of line boxes within the element.\\n\\nOn non-replaced inline elements, it specifies the height that is used to calculate line box height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height)\", \"name\": \"lineHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"letterSpacing\": { \"defaultValue\": null, \"description\": \"The letter-spacing CSS property sets the spacing behavior between text characters.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing)\", \"name\": \"letterSpacing\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"m\": { \"defaultValue\": null, \"description\": \"Margin on top, left, bottom and right\", \"name\": \"m\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mt\": { \"defaultValue\": null, \"description\": \"Margin for the top\", \"name\": \"mt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mr\": { \"defaultValue\": null, \"description\": \"Margin for the right\", \"name\": \"mr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mb\": { \"defaultValue\": null, \"description\": \"Margin for the bottom\", \"name\": \"mb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"ml\": { \"defaultValue\": null, \"description\": \"Margin for the left\", \"name\": \"ml\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mx\": { \"defaultValue\": null, \"description\": \"Margin for the left and right\", \"name\": \"mx\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"my\": { \"defaultValue\": null, \"description\": \"Margin for the top and bottom\", \"name\": \"my\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"p\": { \"defaultValue\": null, \"description\": \"Padding on top, left, bottom and right\", \"name\": \"p\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pt\": { \"defaultValue\": null, \"description\": \"Padding for the top\", \"name\": \"pt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pr\": { \"defaultValue\": null, \"description\": \"Padding for the right\", \"name\": \"pr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pb\": { \"defaultValue\": null, \"description\": \"Padding for the bottom\", \"name\": \"pb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pl\": { \"defaultValue\": null, \"description\": \"Padding for the left\", \"name\": \"pl\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"px\": { \"defaultValue\": null, \"description\": \"Padding for the left and right\", \"name\": \"px\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"py\": { \"defaultValue\": null, \"description\": \"Padding for the top and bottom\", \"name\": \"py\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"flex\": { \"defaultValue\": null, \"description\": \"The flex CSS property specifies how a flex item will grow or shrink so as to fit the space available in\\nits flex container. This is a shorthand property that sets flex-grow, flex-shrink, and flex-basis.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/flex)\", \"name\": \"flex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"alignSelf\": { \"defaultValue\": null, \"description\": \"The align-self CSS property aligns flex items of the current flex line overriding the align-items value.\\n\\nIf any of the item's cross-axis margin is set to auto, then align-self is ignored. In Grid layout align-self\\naligns the item inside the grid area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self)\", \"name\": \"alignSelf\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"textAlign\": { \"defaultValue\": null, \"description\": \"The text-align CSS property specifies the horizontal alignment of an inline or table-cell box.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align)\", \"name\": \"textAlign\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TextAlignProperty>\" } }, \"position\": { \"defaultValue\": null, \"description\": \"The position CSS property specifies how an element is positioned in a document.\\nThe top, right, bottom, and left properties determine the final location of positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/position)\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<PositionProperty>\" } }, \"top\": { \"defaultValue\": null, \"description\": \"The top CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"top\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"bottom\": { \"defaultValue\": null, \"description\": \"The bottom CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"bottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"left\": { \"defaultValue\": null, \"description\": \"The left CSS property participates in specifying the horizontal position\\nof a positioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/left)\", \"name\": \"left\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"right\": { \"defaultValue\": null, \"description\": \"The right CSS property participates in specifying the horizontal position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/right)\", \"name\": \"right\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"zIndex\": { \"defaultValue\": null, \"description\": \"The z-index CSS property sets the z-order of a positioned element and its descendants or\\nflex items. Overlapping elements with a larger z-index cover those with a smaller one.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/z-index)\", \"name\": \"zIndex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<ZIndexProperty>\" } }, \"height\": { \"defaultValue\": null, \"description\": \"The height CSS property specifies the height of an element. By default, the property defines the height of the\\ncontent area. If box-sizing is set to border-box, however, it instead determines the height of the border area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/height)\", \"name\": \"height\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minHeight\": { \"defaultValue\": null, \"description\": \"The min-height CSS property sets the minimum height of an element. It prevents the used value of the height\\nproperty from becoming smaller than the value specified for min-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"minHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxHeight\": { \"defaultValue\": null, \"description\": \"The max-height CSS property sets the maximum height of an element. It prevents the used value of the height\\nproperty from becoming larger than the value specified for max-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-height)\", \"name\": \"maxHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"width\": { \"defaultValue\": null, \"description\": \"The width utility parses a component's `width` prop and converts it into a CSS width declaration.\\n\\n- Numbers from 0-1 are converted to percentage widths.\\n- Numbers greater than 1 are converted to pixel values.\\n- String values are passed as raw CSS values.\\n- And arrays are converted to responsive width styles.\", \"name\": \"width\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minWidth\": { \"defaultValue\": null, \"description\": \"The min-width CSS property sets the minimum width of an element.\\nIt prevents the used value of the width property from becoming smaller than the value specified for min-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/min-width)\", \"name\": \"minWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxWidth\": { \"defaultValue\": null, \"description\": \"The max-width CSS property sets the maximum width of an element.\\nIt prevents the used value of the width property from becoming larger than the value specified by max-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-width)\", \"name\": \"maxWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"The opacity CSS property sets the transparency of an element or the degree to which content\\nbehind an element is visible.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/opacity)\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<GlobalsNumber>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/SchemaView.tsx#SchemaView\"] = { docgenInfo: SchemaView.__docgenInfo, name: \"SchemaView\", path: \"src/SchemaView.tsx#SchemaView\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { boolean, number, object, text, withKnobs } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\n\nimport { JsonSchemaViewer } from '../JsonSchemaViewer';\nimport * as schema from './__fixtures__/default-schema.json';\nimport * as nestedSchema from './__fixtures__/nested-schema.json';\n\nstoriesOf('JsonSchemaViewer', module)\n  .addDecorator(withKnobs)\n  .add('default', () => (\n    <JsonSchemaViewer\n      css={{ fontFamily: 'monospace' }}\n      name={text('name', 'name')}\n      schemas={object('schemas', {})}\n      schema={schema}\n      limitPropertyCount={number('limitPropertyCount', 20)}\n      hideRoot={boolean('hideRoot', false)}\n      expanded={boolean('expanded', true)}\n    />\n  ))\n  .add('custom schema', () => (\n    <JsonSchemaViewer\n      css={{ fontFamily: 'monospace' }}\n      name={text('name', 'name')}\n      schemas={object('schemas', {})}\n      schema={object('schema', nestedSchema)}\n      limitPropertyCount={number('limitPropertyCount', 20)}\n      hideRoot={boolean('hideRoot', false)}\n      expanded={boolean('expanded', true)}\n    />\n  ));\n","// NOTE: The ordering of these imports determines the ordering in Storybook\nimport './JsonSchemaViewer';\n","/* @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { Box, IBox } from '@stoplight/ui-kit';\nimport { FunctionComponent } from 'react';\nimport { useTheme } from '../theme';\n\nexport const ErrorMessage: FunctionComponent<IErrorMessage> = props => {\n  const { children, ...rest } = props;\n  const css = errorMessageStyles();\n\n  return (\n    <Box as=\"p\" p={11} css={css} {...rest}>\n      {children}\n    </Box>\n  );\n};\n\nexport interface IErrorMessageProps {}\n\nexport interface IErrorMessage extends IErrorMessageProps, IBox {}\n\nexport const errorMessageStyles = () => {\n  const theme = useTheme();\n  return {\n    color: theme.canvas.error,\n  };\n};\ntry {\n    // @ts-ignore\n    ErrorMessage.displayName = \"ErrorMessage\";\n    // @ts-ignore\n    ErrorMessage.__docgenInfo = { \"description\": \"\", \"displayName\": \"ErrorMessage\", \"props\": { \"as\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"as\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"CSSProperties\" } }, \"css\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"css\", \"required\": false, \"type\": { \"name\": \"IBoxCSS\" } }, \"backgroundColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"backgroundColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecoration\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecoration\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecorationColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecorationColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textTransform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textTransform\", \"required\": false, \"type\": { \"name\": \"TextTransformProperty\" } }, \"textOverflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textOverflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"whiteSpace\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"whiteSpace\", \"required\": false, \"type\": { \"name\": \"WhiteSpaceProperty\" } }, \"visibility\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"visibility\", \"required\": false, \"type\": { \"name\": \"VisibilityProperty\" } }, \"overflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overflowX\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowX\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"overflowY\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowY\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"cursor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"cursor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"border\": { \"defaultValue\": null, \"description\": \"The border CSS property sets an element's border. It's a shorthand for border-width, border-style,\\nand border-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border)\", \"name\": \"border\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderTop\": { \"defaultValue\": null, \"description\": \"The border-top CSS property is a shorthand that sets the values of border-top-width, border-top-style,\\nand border-top-color. These properties describe an element's top border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-top)\", \"name\": \"borderTop\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderBottom\": { \"defaultValue\": null, \"description\": \"The border-bottom CSS property sets an element's bottom border. It's a shorthand for\\nborder-bottom-width, border-bottom-style and border-bottom-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom)\", \"name\": \"borderBottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderLeft\": { \"defaultValue\": null, \"description\": \"The border-left CSS property is a shorthand that sets the values of border-left-width,\\nborder-left-style, and border-left-color. These properties describe an element's left border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-left)\", \"name\": \"borderLeft\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRight\": { \"defaultValue\": null, \"description\": \"The border-right CSS property is a shorthand that sets border-right-width, border-right-style,\\nand border-right-color. These properties set an element's right border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-right)\", \"name\": \"borderRight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRadius\": { \"defaultValue\": null, \"description\": \"The border-radius CSS property rounds the corners of an element's outer border edge. You can set a single\\nradius to make circular corners, or two radii to make elliptical corners.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)\", \"name\": \"borderRadius\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxShadow\": { \"defaultValue\": null, \"description\": \"The box-shadow CSS property adds shadow effects around an element's frame. You can set multiple effects\\nseparated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread\\nradii, and color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow)\", \"name\": \"boxShadow\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxSizing\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"boxSizing\", \"required\": false, \"type\": { \"name\": \"BoxSizingProperty\" } }, \"display\": { \"defaultValue\": null, \"description\": \"The display CSS property defines the display type of an element, which consists of the two basic qualities\\nof how an element generates boxes \\u2014 the outer display type defining how the box participates in flow layout,\\nand the inner display type defining how the children of the box are laid out.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"display\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"fontSize\": { \"defaultValue\": null, \"description\": \"The fontSize utility parses a component's `fontSize` prop and converts it into a CSS font-size declaration.\\n\\n- Numbers from 0-8 (or `theme.fontSizes.length`) are converted to values on the [font size scale](#default-theme).\\n- Numbers greater than `theme.fontSizes.length` are converted to raw pixel values.\\n- String values are passed as raw CSS values.\\n- And array values are converted into responsive values.\", \"name\": \"fontSize\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"fontWeight\": { \"defaultValue\": null, \"description\": \"The font-weight CSS property specifies the weight (or boldness) of the font.\\n\\nThe font weights available to you will depend on the font-family you are using. Some fonts are only available in normal and bold.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight)\", \"name\": \"fontWeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<FontWeightProperty>\" } }, \"fontStyle\": { \"defaultValue\": null, \"description\": \"The font-style CSS property specifies whether a font should be styled with a normal, italic,\\nor oblique face from its font-family.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style)\", \"name\": \"fontStyle\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"lineHeight\": { \"defaultValue\": null, \"description\": \"The line-height CSS property sets the amount of space used for lines, such as in text. On block-level elements,\\nit specifies the minimum height of line boxes within the element.\\n\\nOn non-replaced inline elements, it specifies the height that is used to calculate line box height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height)\", \"name\": \"lineHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"letterSpacing\": { \"defaultValue\": null, \"description\": \"The letter-spacing CSS property sets the spacing behavior between text characters.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing)\", \"name\": \"letterSpacing\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"m\": { \"defaultValue\": null, \"description\": \"Margin on top, left, bottom and right\", \"name\": \"m\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mt\": { \"defaultValue\": null, \"description\": \"Margin for the top\", \"name\": \"mt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mr\": { \"defaultValue\": null, \"description\": \"Margin for the right\", \"name\": \"mr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mb\": { \"defaultValue\": null, \"description\": \"Margin for the bottom\", \"name\": \"mb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"ml\": { \"defaultValue\": null, \"description\": \"Margin for the left\", \"name\": \"ml\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mx\": { \"defaultValue\": null, \"description\": \"Margin for the left and right\", \"name\": \"mx\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"my\": { \"defaultValue\": null, \"description\": \"Margin for the top and bottom\", \"name\": \"my\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"p\": { \"defaultValue\": null, \"description\": \"Padding on top, left, bottom and right\", \"name\": \"p\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pt\": { \"defaultValue\": null, \"description\": \"Padding for the top\", \"name\": \"pt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pr\": { \"defaultValue\": null, \"description\": \"Padding for the right\", \"name\": \"pr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pb\": { \"defaultValue\": null, \"description\": \"Padding for the bottom\", \"name\": \"pb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pl\": { \"defaultValue\": null, \"description\": \"Padding for the left\", \"name\": \"pl\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"px\": { \"defaultValue\": null, \"description\": \"Padding for the left and right\", \"name\": \"px\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"py\": { \"defaultValue\": null, \"description\": \"Padding for the top and bottom\", \"name\": \"py\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"flex\": { \"defaultValue\": null, \"description\": \"The flex CSS property specifies how a flex item will grow or shrink so as to fit the space available in\\nits flex container. This is a shorthand property that sets flex-grow, flex-shrink, and flex-basis.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/flex)\", \"name\": \"flex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"alignSelf\": { \"defaultValue\": null, \"description\": \"The align-self CSS property aligns flex items of the current flex line overriding the align-items value.\\n\\nIf any of the item's cross-axis margin is set to auto, then align-self is ignored. In Grid layout align-self\\naligns the item inside the grid area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self)\", \"name\": \"alignSelf\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"textAlign\": { \"defaultValue\": null, \"description\": \"The text-align CSS property specifies the horizontal alignment of an inline or table-cell box.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align)\", \"name\": \"textAlign\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TextAlignProperty>\" } }, \"position\": { \"defaultValue\": null, \"description\": \"The position CSS property specifies how an element is positioned in a document.\\nThe top, right, bottom, and left properties determine the final location of positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/position)\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<PositionProperty>\" } }, \"top\": { \"defaultValue\": null, \"description\": \"The top CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"top\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"bottom\": { \"defaultValue\": null, \"description\": \"The bottom CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"bottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"left\": { \"defaultValue\": null, \"description\": \"The left CSS property participates in specifying the horizontal position\\nof a positioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/left)\", \"name\": \"left\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"right\": { \"defaultValue\": null, \"description\": \"The right CSS property participates in specifying the horizontal position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/right)\", \"name\": \"right\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"zIndex\": { \"defaultValue\": null, \"description\": \"The z-index CSS property sets the z-order of a positioned element and its descendants or\\nflex items. Overlapping elements with a larger z-index cover those with a smaller one.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/z-index)\", \"name\": \"zIndex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<ZIndexProperty>\" } }, \"height\": { \"defaultValue\": null, \"description\": \"The height CSS property specifies the height of an element. By default, the property defines the height of the\\ncontent area. If box-sizing is set to border-box, however, it instead determines the height of the border area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/height)\", \"name\": \"height\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minHeight\": { \"defaultValue\": null, \"description\": \"The min-height CSS property sets the minimum height of an element. It prevents the used value of the height\\nproperty from becoming smaller than the value specified for min-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"minHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxHeight\": { \"defaultValue\": null, \"description\": \"The max-height CSS property sets the maximum height of an element. It prevents the used value of the height\\nproperty from becoming larger than the value specified for max-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-height)\", \"name\": \"maxHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"width\": { \"defaultValue\": null, \"description\": \"The width utility parses a component's `width` prop and converts it into a CSS width declaration.\\n\\n- Numbers from 0-1 are converted to percentage widths.\\n- Numbers greater than 1 are converted to pixel values.\\n- String values are passed as raw CSS values.\\n- And arrays are converted to responsive width styles.\", \"name\": \"width\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minWidth\": { \"defaultValue\": null, \"description\": \"The min-width CSS property sets the minimum width of an element.\\nIt prevents the used value of the width property from becoming smaller than the value specified for min-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/min-width)\", \"name\": \"minWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxWidth\": { \"defaultValue\": null, \"description\": \"The max-width CSS property sets the maximum width of an element.\\nIt prevents the used value of the width property from becoming larger than the value specified by max-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-width)\", \"name\": \"maxWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"The opacity CSS property sets the transparency of an element or the degree to which content\\nbehind an element is visible.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/opacity)\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<GlobalsNumber>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/common/ErrorMessage.tsx#ErrorMessage\"] = { docgenInfo: ErrorMessage.__docgenInfo, name: \"ErrorMessage\", path: \"src/common/ErrorMessage.tsx#ErrorMessage\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","/* @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { Box, IBox } from '@stoplight/ui-kit';\nimport { FunctionComponent } from 'react';\nimport { useTheme } from '../theme';\n\nexport const MutedText: FunctionComponent<IMutedText> = props => {\n  const { children, ...rest } = props;\n  const css = mutedTextStyles();\n\n  return (\n    <Box css={css} {...rest}>\n      {children}\n    </Box>\n  );\n};\n\nexport interface IMutedTextProps {}\n\nexport interface IMutedText extends IMutedTextProps, IBox {}\n\nexport const mutedTextStyles = () => {\n  const theme = useTheme();\n  return {\n    color: theme.canvas.muted,\n  };\n};\ntry {\n    // @ts-ignore\n    MutedText.displayName = \"MutedText\";\n    // @ts-ignore\n    MutedText.__docgenInfo = { \"description\": \"\", \"displayName\": \"MutedText\", \"props\": { \"as\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"as\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"CSSProperties\" } }, \"css\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"css\", \"required\": false, \"type\": { \"name\": \"IBoxCSS\" } }, \"backgroundColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"backgroundColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecoration\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecoration\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecorationColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecorationColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textTransform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textTransform\", \"required\": false, \"type\": { \"name\": \"TextTransformProperty\" } }, \"textOverflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textOverflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"whiteSpace\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"whiteSpace\", \"required\": false, \"type\": { \"name\": \"WhiteSpaceProperty\" } }, \"visibility\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"visibility\", \"required\": false, \"type\": { \"name\": \"VisibilityProperty\" } }, \"overflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overflowX\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowX\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"overflowY\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowY\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"cursor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"cursor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"border\": { \"defaultValue\": null, \"description\": \"The border CSS property sets an element's border. It's a shorthand for border-width, border-style,\\nand border-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border)\", \"name\": \"border\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderTop\": { \"defaultValue\": null, \"description\": \"The border-top CSS property is a shorthand that sets the values of border-top-width, border-top-style,\\nand border-top-color. These properties describe an element's top border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-top)\", \"name\": \"borderTop\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderBottom\": { \"defaultValue\": null, \"description\": \"The border-bottom CSS property sets an element's bottom border. It's a shorthand for\\nborder-bottom-width, border-bottom-style and border-bottom-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom)\", \"name\": \"borderBottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderLeft\": { \"defaultValue\": null, \"description\": \"The border-left CSS property is a shorthand that sets the values of border-left-width,\\nborder-left-style, and border-left-color. These properties describe an element's left border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-left)\", \"name\": \"borderLeft\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRight\": { \"defaultValue\": null, \"description\": \"The border-right CSS property is a shorthand that sets border-right-width, border-right-style,\\nand border-right-color. These properties set an element's right border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-right)\", \"name\": \"borderRight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRadius\": { \"defaultValue\": null, \"description\": \"The border-radius CSS property rounds the corners of an element's outer border edge. You can set a single\\nradius to make circular corners, or two radii to make elliptical corners.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)\", \"name\": \"borderRadius\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxShadow\": { \"defaultValue\": null, \"description\": \"The box-shadow CSS property adds shadow effects around an element's frame. You can set multiple effects\\nseparated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread\\nradii, and color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow)\", \"name\": \"boxShadow\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxSizing\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"boxSizing\", \"required\": false, \"type\": { \"name\": \"BoxSizingProperty\" } }, \"display\": { \"defaultValue\": null, \"description\": \"The display CSS property defines the display type of an element, which consists of the two basic qualities\\nof how an element generates boxes \\u2014 the outer display type defining how the box participates in flow layout,\\nand the inner display type defining how the children of the box are laid out.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"display\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"fontSize\": { \"defaultValue\": null, \"description\": \"The fontSize utility parses a component's `fontSize` prop and converts it into a CSS font-size declaration.\\n\\n- Numbers from 0-8 (or `theme.fontSizes.length`) are converted to values on the [font size scale](#default-theme).\\n- Numbers greater than `theme.fontSizes.length` are converted to raw pixel values.\\n- String values are passed as raw CSS values.\\n- And array values are converted into responsive values.\", \"name\": \"fontSize\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"fontWeight\": { \"defaultValue\": null, \"description\": \"The font-weight CSS property specifies the weight (or boldness) of the font.\\n\\nThe font weights available to you will depend on the font-family you are using. Some fonts are only available in normal and bold.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight)\", \"name\": \"fontWeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<FontWeightProperty>\" } }, \"fontStyle\": { \"defaultValue\": null, \"description\": \"The font-style CSS property specifies whether a font should be styled with a normal, italic,\\nor oblique face from its font-family.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style)\", \"name\": \"fontStyle\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"lineHeight\": { \"defaultValue\": null, \"description\": \"The line-height CSS property sets the amount of space used for lines, such as in text. On block-level elements,\\nit specifies the minimum height of line boxes within the element.\\n\\nOn non-replaced inline elements, it specifies the height that is used to calculate line box height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height)\", \"name\": \"lineHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"letterSpacing\": { \"defaultValue\": null, \"description\": \"The letter-spacing CSS property sets the spacing behavior between text characters.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing)\", \"name\": \"letterSpacing\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"m\": { \"defaultValue\": null, \"description\": \"Margin on top, left, bottom and right\", \"name\": \"m\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mt\": { \"defaultValue\": null, \"description\": \"Margin for the top\", \"name\": \"mt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mr\": { \"defaultValue\": null, \"description\": \"Margin for the right\", \"name\": \"mr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mb\": { \"defaultValue\": null, \"description\": \"Margin for the bottom\", \"name\": \"mb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"ml\": { \"defaultValue\": null, \"description\": \"Margin for the left\", \"name\": \"ml\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mx\": { \"defaultValue\": null, \"description\": \"Margin for the left and right\", \"name\": \"mx\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"my\": { \"defaultValue\": null, \"description\": \"Margin for the top and bottom\", \"name\": \"my\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"p\": { \"defaultValue\": null, \"description\": \"Padding on top, left, bottom and right\", \"name\": \"p\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pt\": { \"defaultValue\": null, \"description\": \"Padding for the top\", \"name\": \"pt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pr\": { \"defaultValue\": null, \"description\": \"Padding for the right\", \"name\": \"pr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pb\": { \"defaultValue\": null, \"description\": \"Padding for the bottom\", \"name\": \"pb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pl\": { \"defaultValue\": null, \"description\": \"Padding for the left\", \"name\": \"pl\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"px\": { \"defaultValue\": null, \"description\": \"Padding for the left and right\", \"name\": \"px\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"py\": { \"defaultValue\": null, \"description\": \"Padding for the top and bottom\", \"name\": \"py\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"flex\": { \"defaultValue\": null, \"description\": \"The flex CSS property specifies how a flex item will grow or shrink so as to fit the space available in\\nits flex container. This is a shorthand property that sets flex-grow, flex-shrink, and flex-basis.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/flex)\", \"name\": \"flex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"alignSelf\": { \"defaultValue\": null, \"description\": \"The align-self CSS property aligns flex items of the current flex line overriding the align-items value.\\n\\nIf any of the item's cross-axis margin is set to auto, then align-self is ignored. In Grid layout align-self\\naligns the item inside the grid area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self)\", \"name\": \"alignSelf\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"textAlign\": { \"defaultValue\": null, \"description\": \"The text-align CSS property specifies the horizontal alignment of an inline or table-cell box.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align)\", \"name\": \"textAlign\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TextAlignProperty>\" } }, \"position\": { \"defaultValue\": null, \"description\": \"The position CSS property specifies how an element is positioned in a document.\\nThe top, right, bottom, and left properties determine the final location of positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/position)\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<PositionProperty>\" } }, \"top\": { \"defaultValue\": null, \"description\": \"The top CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"top\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"bottom\": { \"defaultValue\": null, \"description\": \"The bottom CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"bottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"left\": { \"defaultValue\": null, \"description\": \"The left CSS property participates in specifying the horizontal position\\nof a positioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/left)\", \"name\": \"left\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"right\": { \"defaultValue\": null, \"description\": \"The right CSS property participates in specifying the horizontal position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/right)\", \"name\": \"right\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"zIndex\": { \"defaultValue\": null, \"description\": \"The z-index CSS property sets the z-order of a positioned element and its descendants or\\nflex items. Overlapping elements with a larger z-index cover those with a smaller one.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/z-index)\", \"name\": \"zIndex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<ZIndexProperty>\" } }, \"height\": { \"defaultValue\": null, \"description\": \"The height CSS property specifies the height of an element. By default, the property defines the height of the\\ncontent area. If box-sizing is set to border-box, however, it instead determines the height of the border area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/height)\", \"name\": \"height\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minHeight\": { \"defaultValue\": null, \"description\": \"The min-height CSS property sets the minimum height of an element. It prevents the used value of the height\\nproperty from becoming smaller than the value specified for min-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"minHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxHeight\": { \"defaultValue\": null, \"description\": \"The max-height CSS property sets the maximum height of an element. It prevents the used value of the height\\nproperty from becoming larger than the value specified for max-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-height)\", \"name\": \"maxHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"width\": { \"defaultValue\": null, \"description\": \"The width utility parses a component's `width` prop and converts it into a CSS width declaration.\\n\\n- Numbers from 0-1 are converted to percentage widths.\\n- Numbers greater than 1 are converted to pixel values.\\n- String values are passed as raw CSS values.\\n- And arrays are converted to responsive width styles.\", \"name\": \"width\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minWidth\": { \"defaultValue\": null, \"description\": \"The min-width CSS property sets the minimum width of an element.\\nIt prevents the used value of the width property from becoming smaller than the value specified for min-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/min-width)\", \"name\": \"minWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxWidth\": { \"defaultValue\": null, \"description\": \"The max-width CSS property sets the maximum width of an element.\\nIt prevents the used value of the width property from becoming larger than the value specified by max-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-width)\", \"name\": \"maxWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"The opacity CSS property sets the transparency of an element or the degree to which content\\nbehind an element is visible.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/opacity)\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<GlobalsNumber>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/common/MutedText.tsx#MutedText\"] = { docgenInfo: MutedText.__docgenInfo, name: \"MutedText\", path: \"src/common/MutedText.tsx#MutedText\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","/* @jsx jsx */\n\nimport { css, jsx } from '@emotion/core';\nimport { Box, IBox } from '@stoplight/ui-kit';\nimport { FunctionComponent } from 'react';\nimport { DEFAULT_PADDING, GUTTER_WIDTH } from '../consts';\nimport { useTheme } from '../theme';\n\nexport const Row: FunctionComponent<IRow> = props => {\n  const { children, level, ...rest } = props;\n  const styles = rowStyles({ level });\n\n  return (\n    <Box css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n};\n\nexport interface IRowProps {\n  level?: number;\n}\n\nexport interface IRow extends IRowProps, IBox {}\n\nexport const rowStyles = ({ level }: IRowProps) => {\n  const theme = useTheme();\n\n  return [\n    {\n      ...(level !== undefined && { paddingLeft: DEFAULT_PADDING + GUTTER_WIDTH * level }),\n    },\n    css`\n      user-select none;\n      line-height: 1rem;\n\n      &:nth-of-type(even) {\n        background-color ${theme.row.evenBg};\n        color ${theme.row.evenFg || theme.canvas.fg};\n      }\n\n      &:hover {\n        background-color ${theme.row.hoverBg};\n        color ${theme.row.hoverFg || theme.canvas.fg};\n      }\n    `,\n  ];\n};\ntry {\n    // @ts-ignore\n    Row.displayName = \"Row\";\n    // @ts-ignore\n    Row.__docgenInfo = { \"description\": \"\", \"displayName\": \"Row\", \"props\": { \"level\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"level\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"as\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"as\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"CSSProperties\" } }, \"css\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"css\", \"required\": false, \"type\": { \"name\": \"IBoxCSS\" } }, \"backgroundColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"backgroundColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecoration\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecoration\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecorationColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecorationColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textTransform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textTransform\", \"required\": false, \"type\": { \"name\": \"TextTransformProperty\" } }, \"textOverflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textOverflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"whiteSpace\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"whiteSpace\", \"required\": false, \"type\": { \"name\": \"WhiteSpaceProperty\" } }, \"visibility\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"visibility\", \"required\": false, \"type\": { \"name\": \"VisibilityProperty\" } }, \"overflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overflowX\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowX\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"overflowY\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowY\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"cursor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"cursor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"border\": { \"defaultValue\": null, \"description\": \"The border CSS property sets an element's border. It's a shorthand for border-width, border-style,\\nand border-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border)\", \"name\": \"border\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderTop\": { \"defaultValue\": null, \"description\": \"The border-top CSS property is a shorthand that sets the values of border-top-width, border-top-style,\\nand border-top-color. These properties describe an element's top border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-top)\", \"name\": \"borderTop\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderBottom\": { \"defaultValue\": null, \"description\": \"The border-bottom CSS property sets an element's bottom border. It's a shorthand for\\nborder-bottom-width, border-bottom-style and border-bottom-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom)\", \"name\": \"borderBottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderLeft\": { \"defaultValue\": null, \"description\": \"The border-left CSS property is a shorthand that sets the values of border-left-width,\\nborder-left-style, and border-left-color. These properties describe an element's left border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-left)\", \"name\": \"borderLeft\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRight\": { \"defaultValue\": null, \"description\": \"The border-right CSS property is a shorthand that sets border-right-width, border-right-style,\\nand border-right-color. These properties set an element's right border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-right)\", \"name\": \"borderRight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRadius\": { \"defaultValue\": null, \"description\": \"The border-radius CSS property rounds the corners of an element's outer border edge. You can set a single\\nradius to make circular corners, or two radii to make elliptical corners.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)\", \"name\": \"borderRadius\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxShadow\": { \"defaultValue\": null, \"description\": \"The box-shadow CSS property adds shadow effects around an element's frame. You can set multiple effects\\nseparated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread\\nradii, and color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow)\", \"name\": \"boxShadow\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxSizing\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"boxSizing\", \"required\": false, \"type\": { \"name\": \"BoxSizingProperty\" } }, \"display\": { \"defaultValue\": null, \"description\": \"The display CSS property defines the display type of an element, which consists of the two basic qualities\\nof how an element generates boxes \\u2014 the outer display type defining how the box participates in flow layout,\\nand the inner display type defining how the children of the box are laid out.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"display\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"fontSize\": { \"defaultValue\": null, \"description\": \"The fontSize utility parses a component's `fontSize` prop and converts it into a CSS font-size declaration.\\n\\n- Numbers from 0-8 (or `theme.fontSizes.length`) are converted to values on the [font size scale](#default-theme).\\n- Numbers greater than `theme.fontSizes.length` are converted to raw pixel values.\\n- String values are passed as raw CSS values.\\n- And array values are converted into responsive values.\", \"name\": \"fontSize\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"fontWeight\": { \"defaultValue\": null, \"description\": \"The font-weight CSS property specifies the weight (or boldness) of the font.\\n\\nThe font weights available to you will depend on the font-family you are using. Some fonts are only available in normal and bold.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight)\", \"name\": \"fontWeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<FontWeightProperty>\" } }, \"fontStyle\": { \"defaultValue\": null, \"description\": \"The font-style CSS property specifies whether a font should be styled with a normal, italic,\\nor oblique face from its font-family.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style)\", \"name\": \"fontStyle\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"lineHeight\": { \"defaultValue\": null, \"description\": \"The line-height CSS property sets the amount of space used for lines, such as in text. On block-level elements,\\nit specifies the minimum height of line boxes within the element.\\n\\nOn non-replaced inline elements, it specifies the height that is used to calculate line box height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height)\", \"name\": \"lineHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"letterSpacing\": { \"defaultValue\": null, \"description\": \"The letter-spacing CSS property sets the spacing behavior between text characters.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing)\", \"name\": \"letterSpacing\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"m\": { \"defaultValue\": null, \"description\": \"Margin on top, left, bottom and right\", \"name\": \"m\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mt\": { \"defaultValue\": null, \"description\": \"Margin for the top\", \"name\": \"mt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mr\": { \"defaultValue\": null, \"description\": \"Margin for the right\", \"name\": \"mr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mb\": { \"defaultValue\": null, \"description\": \"Margin for the bottom\", \"name\": \"mb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"ml\": { \"defaultValue\": null, \"description\": \"Margin for the left\", \"name\": \"ml\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mx\": { \"defaultValue\": null, \"description\": \"Margin for the left and right\", \"name\": \"mx\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"my\": { \"defaultValue\": null, \"description\": \"Margin for the top and bottom\", \"name\": \"my\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"p\": { \"defaultValue\": null, \"description\": \"Padding on top, left, bottom and right\", \"name\": \"p\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pt\": { \"defaultValue\": null, \"description\": \"Padding for the top\", \"name\": \"pt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pr\": { \"defaultValue\": null, \"description\": \"Padding for the right\", \"name\": \"pr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pb\": { \"defaultValue\": null, \"description\": \"Padding for the bottom\", \"name\": \"pb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pl\": { \"defaultValue\": null, \"description\": \"Padding for the left\", \"name\": \"pl\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"px\": { \"defaultValue\": null, \"description\": \"Padding for the left and right\", \"name\": \"px\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"py\": { \"defaultValue\": null, \"description\": \"Padding for the top and bottom\", \"name\": \"py\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"flex\": { \"defaultValue\": null, \"description\": \"The flex CSS property specifies how a flex item will grow or shrink so as to fit the space available in\\nits flex container. This is a shorthand property that sets flex-grow, flex-shrink, and flex-basis.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/flex)\", \"name\": \"flex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"alignSelf\": { \"defaultValue\": null, \"description\": \"The align-self CSS property aligns flex items of the current flex line overriding the align-items value.\\n\\nIf any of the item's cross-axis margin is set to auto, then align-self is ignored. In Grid layout align-self\\naligns the item inside the grid area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self)\", \"name\": \"alignSelf\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"textAlign\": { \"defaultValue\": null, \"description\": \"The text-align CSS property specifies the horizontal alignment of an inline or table-cell box.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align)\", \"name\": \"textAlign\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TextAlignProperty>\" } }, \"position\": { \"defaultValue\": null, \"description\": \"The position CSS property specifies how an element is positioned in a document.\\nThe top, right, bottom, and left properties determine the final location of positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/position)\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<PositionProperty>\" } }, \"top\": { \"defaultValue\": null, \"description\": \"The top CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"top\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"bottom\": { \"defaultValue\": null, \"description\": \"The bottom CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"bottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"left\": { \"defaultValue\": null, \"description\": \"The left CSS property participates in specifying the horizontal position\\nof a positioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/left)\", \"name\": \"left\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"right\": { \"defaultValue\": null, \"description\": \"The right CSS property participates in specifying the horizontal position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/right)\", \"name\": \"right\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"zIndex\": { \"defaultValue\": null, \"description\": \"The z-index CSS property sets the z-order of a positioned element and its descendants or\\nflex items. Overlapping elements with a larger z-index cover those with a smaller one.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/z-index)\", \"name\": \"zIndex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<ZIndexProperty>\" } }, \"height\": { \"defaultValue\": null, \"description\": \"The height CSS property specifies the height of an element. By default, the property defines the height of the\\ncontent area. If box-sizing is set to border-box, however, it instead determines the height of the border area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/height)\", \"name\": \"height\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minHeight\": { \"defaultValue\": null, \"description\": \"The min-height CSS property sets the minimum height of an element. It prevents the used value of the height\\nproperty from becoming smaller than the value specified for min-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"minHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxHeight\": { \"defaultValue\": null, \"description\": \"The max-height CSS property sets the maximum height of an element. It prevents the used value of the height\\nproperty from becoming larger than the value specified for max-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-height)\", \"name\": \"maxHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"width\": { \"defaultValue\": null, \"description\": \"The width utility parses a component's `width` prop and converts it into a CSS width declaration.\\n\\n- Numbers from 0-1 are converted to percentage widths.\\n- Numbers greater than 1 are converted to pixel values.\\n- String values are passed as raw CSS values.\\n- And arrays are converted to responsive width styles.\", \"name\": \"width\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minWidth\": { \"defaultValue\": null, \"description\": \"The min-width CSS property sets the minimum width of an element.\\nIt prevents the used value of the width property from becoming smaller than the value specified for min-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/min-width)\", \"name\": \"minWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxWidth\": { \"defaultValue\": null, \"description\": \"The max-width CSS property sets the maximum width of an element.\\nIt prevents the used value of the width property from becoming larger than the value specified by max-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-width)\", \"name\": \"maxWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"The opacity CSS property sets the transparency of an element or the degree to which content\\nbehind an element is visible.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/opacity)\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<GlobalsNumber>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/common/Row.tsx#Row\"] = { docgenInfo: Row.__docgenInfo, name: \"Row\", path: \"src/common/Row.tsx#Row\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    rowStyles.displayName = \"rowStyles\";\n    // @ts-ignore\n    rowStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"rowStyles\", \"props\": { \"level\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"level\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/common/Row.tsx#rowStyles\"] = { docgenInfo: rowStyles.__docgenInfo, name: \"rowStyles\", path: \"src/common/Row.tsx#rowStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","/* @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { Box, IBox } from '@stoplight/ui-kit';\nimport { FunctionComponent } from 'react';\nimport { useTheme } from '../theme';\n\nexport const RowType: FunctionComponent<IRowType> = props => {\n  const { children, type, ...rest } = props;\n  const css = rowStyles({ type });\n\n  return (\n    <Box css={css} {...rest}>\n      {children}\n    </Box>\n  );\n};\n\nexport interface IRowTypeProps {\n  type?: string;\n}\n\nexport interface IRowType extends IRowTypeProps, IBox {}\n\nexport const rowStyles = ({ type }: IRowTypeProps) => {\n  const theme = useTheme();\n\n  return {\n    ...(type !== undefined && type in theme.types && { color: theme.types[type] }),\n  };\n};\ntry {\n    // @ts-ignore\n    RowType.displayName = \"RowType\";\n    // @ts-ignore\n    RowType.__docgenInfo = { \"description\": \"\", \"displayName\": \"RowType\", \"props\": { \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"as\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"as\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"CSSProperties\" } }, \"css\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"css\", \"required\": false, \"type\": { \"name\": \"IBoxCSS\" } }, \"backgroundColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"backgroundColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecoration\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecoration\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textDecorationColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textDecorationColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textTransform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textTransform\", \"required\": false, \"type\": { \"name\": \"TextTransformProperty\" } }, \"textOverflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textOverflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"whiteSpace\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"whiteSpace\", \"required\": false, \"type\": { \"name\": \"WhiteSpaceProperty\" } }, \"visibility\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"visibility\", \"required\": false, \"type\": { \"name\": \"VisibilityProperty\" } }, \"overflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflow\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overflowX\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowX\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"overflowY\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflowY\", \"required\": false, \"type\": { \"name\": \"OverflowXProperty\" } }, \"cursor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"cursor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"border\": { \"defaultValue\": null, \"description\": \"The border CSS property sets an element's border. It's a shorthand for border-width, border-style,\\nand border-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border)\", \"name\": \"border\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderTop\": { \"defaultValue\": null, \"description\": \"The border-top CSS property is a shorthand that sets the values of border-top-width, border-top-style,\\nand border-top-color. These properties describe an element's top border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-top)\", \"name\": \"borderTop\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderBottom\": { \"defaultValue\": null, \"description\": \"The border-bottom CSS property sets an element's bottom border. It's a shorthand for\\nborder-bottom-width, border-bottom-style and border-bottom-color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom)\", \"name\": \"borderBottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderLeft\": { \"defaultValue\": null, \"description\": \"The border-left CSS property is a shorthand that sets the values of border-left-width,\\nborder-left-style, and border-left-color. These properties describe an element's left border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-left)\", \"name\": \"borderLeft\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRight\": { \"defaultValue\": null, \"description\": \"The border-right CSS property is a shorthand that sets border-right-width, border-right-style,\\nand border-right-color. These properties set an element's right border.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-right)\", \"name\": \"borderRight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"borderRadius\": { \"defaultValue\": null, \"description\": \"The border-radius CSS property rounds the corners of an element's outer border edge. You can set a single\\nradius to make circular corners, or two radii to make elliptical corners.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)\", \"name\": \"borderRadius\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxShadow\": { \"defaultValue\": null, \"description\": \"The box-shadow CSS property adds shadow effects around an element's frame. You can set multiple effects\\nseparated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread\\nradii, and color.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow)\", \"name\": \"boxShadow\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"boxSizing\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"boxSizing\", \"required\": false, \"type\": { \"name\": \"BoxSizingProperty\" } }, \"display\": { \"defaultValue\": null, \"description\": \"The display CSS property defines the display type of an element, which consists of the two basic qualities\\nof how an element generates boxes \\u2014 the outer display type defining how the box participates in flow layout,\\nand the inner display type defining how the children of the box are laid out.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"display\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"fontSize\": { \"defaultValue\": null, \"description\": \"The fontSize utility parses a component's `fontSize` prop and converts it into a CSS font-size declaration.\\n\\n- Numbers from 0-8 (or `theme.fontSizes.length`) are converted to values on the [font size scale](#default-theme).\\n- Numbers greater than `theme.fontSizes.length` are converted to raw pixel values.\\n- String values are passed as raw CSS values.\\n- And array values are converted into responsive values.\", \"name\": \"fontSize\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"fontWeight\": { \"defaultValue\": null, \"description\": \"The font-weight CSS property specifies the weight (or boldness) of the font.\\n\\nThe font weights available to you will depend on the font-family you are using. Some fonts are only available in normal and bold.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight)\", \"name\": \"fontWeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<FontWeightProperty>\" } }, \"fontStyle\": { \"defaultValue\": null, \"description\": \"The font-style CSS property specifies whether a font should be styled with a normal, italic,\\nor oblique face from its font-family.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style)\", \"name\": \"fontStyle\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"lineHeight\": { \"defaultValue\": null, \"description\": \"The line-height CSS property sets the amount of space used for lines, such as in text. On block-level elements,\\nit specifies the minimum height of line boxes within the element.\\n\\nOn non-replaced inline elements, it specifies the height that is used to calculate line box height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height)\", \"name\": \"lineHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"letterSpacing\": { \"defaultValue\": null, \"description\": \"The letter-spacing CSS property sets the spacing behavior between text characters.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing)\", \"name\": \"letterSpacing\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"m\": { \"defaultValue\": null, \"description\": \"Margin on top, left, bottom and right\", \"name\": \"m\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mt\": { \"defaultValue\": null, \"description\": \"Margin for the top\", \"name\": \"mt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mr\": { \"defaultValue\": null, \"description\": \"Margin for the right\", \"name\": \"mr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mb\": { \"defaultValue\": null, \"description\": \"Margin for the bottom\", \"name\": \"mb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"ml\": { \"defaultValue\": null, \"description\": \"Margin for the left\", \"name\": \"ml\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"mx\": { \"defaultValue\": null, \"description\": \"Margin for the left and right\", \"name\": \"mx\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"my\": { \"defaultValue\": null, \"description\": \"Margin for the top and bottom\", \"name\": \"my\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"p\": { \"defaultValue\": null, \"description\": \"Padding on top, left, bottom and right\", \"name\": \"p\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pt\": { \"defaultValue\": null, \"description\": \"Padding for the top\", \"name\": \"pt\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pr\": { \"defaultValue\": null, \"description\": \"Padding for the right\", \"name\": \"pr\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pb\": { \"defaultValue\": null, \"description\": \"Padding for the bottom\", \"name\": \"pb\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"pl\": { \"defaultValue\": null, \"description\": \"Padding for the left\", \"name\": \"pl\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"px\": { \"defaultValue\": null, \"description\": \"Padding for the left and right\", \"name\": \"px\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"py\": { \"defaultValue\": null, \"description\": \"Padding for the top and bottom\", \"name\": \"py\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"flex\": { \"defaultValue\": null, \"description\": \"The flex CSS property specifies how a flex item will grow or shrink so as to fit the space available in\\nits flex container. This is a shorthand property that sets flex-grow, flex-shrink, and flex-basis.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/flex)\", \"name\": \"flex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"alignSelf\": { \"defaultValue\": null, \"description\": \"The align-self CSS property aligns flex items of the current flex line overriding the align-items value.\\n\\nIf any of the item's cross-axis margin is set to auto, then align-self is ignored. In Grid layout align-self\\naligns the item inside the grid area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self)\", \"name\": \"alignSelf\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<string>\" } }, \"textAlign\": { \"defaultValue\": null, \"description\": \"The text-align CSS property specifies the horizontal alignment of an inline or table-cell box.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align)\", \"name\": \"textAlign\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TextAlignProperty>\" } }, \"position\": { \"defaultValue\": null, \"description\": \"The position CSS property specifies how an element is positioned in a document.\\nThe top, right, bottom, and left properties determine the final location of positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/position)\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<PositionProperty>\" } }, \"top\": { \"defaultValue\": null, \"description\": \"The top CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"top\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"bottom\": { \"defaultValue\": null, \"description\": \"The bottom CSS property participates in specifying the vertical position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/top)\", \"name\": \"bottom\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"left\": { \"defaultValue\": null, \"description\": \"The left CSS property participates in specifying the horizontal position\\nof a positioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/left)\", \"name\": \"left\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"right\": { \"defaultValue\": null, \"description\": \"The right CSS property participates in specifying the horizontal position of a\\npositioned element. It has no effect on non-positioned elements.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/right)\", \"name\": \"right\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"zIndex\": { \"defaultValue\": null, \"description\": \"The z-index CSS property sets the z-order of a positioned element and its descendants or\\nflex items. Overlapping elements with a larger z-index cover those with a smaller one.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/z-index)\", \"name\": \"zIndex\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<ZIndexProperty>\" } }, \"height\": { \"defaultValue\": null, \"description\": \"The height CSS property specifies the height of an element. By default, the property defines the height of the\\ncontent area. If box-sizing is set to border-box, however, it instead determines the height of the border area.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/height)\", \"name\": \"height\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minHeight\": { \"defaultValue\": null, \"description\": \"The min-height CSS property sets the minimum height of an element. It prevents the used value of the height\\nproperty from becoming smaller than the value specified for min-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\", \"name\": \"minHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxHeight\": { \"defaultValue\": null, \"description\": \"The max-height CSS property sets the maximum height of an element. It prevents the used value of the height\\nproperty from becoming larger than the value specified for max-height.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-height)\", \"name\": \"maxHeight\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"width\": { \"defaultValue\": null, \"description\": \"The width utility parses a component's `width` prop and converts it into a CSS width declaration.\\n\\n- Numbers from 0-1 are converted to percentage widths.\\n- Numbers greater than 1 are converted to pixel values.\\n- String values are passed as raw CSS values.\\n- And arrays are converted to responsive width styles.\", \"name\": \"width\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"minWidth\": { \"defaultValue\": null, \"description\": \"The min-width CSS property sets the minimum width of an element.\\nIt prevents the used value of the width property from becoming smaller than the value specified for min-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/min-width)\", \"name\": \"minWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"maxWidth\": { \"defaultValue\": null, \"description\": \"The max-width CSS property sets the maximum width of an element.\\nIt prevents the used value of the width property from becoming larger than the value specified by max-width.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/max-width)\", \"name\": \"maxWidth\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<TLengthStyledSystem>\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"The opacity CSS property sets the transparency of an element or the degree to which content\\nbehind an element is visible.\\n\\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/opacity)\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"ResponsiveValue<GlobalsNumber>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/common/RowType.tsx#RowType\"] = { docgenInfo: RowType.__docgenInfo, name: \"RowType\", path: \"src/common/RowType.tsx#RowType\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    rowStyles.displayName = \"rowStyles\";\n    // @ts-ignore\n    rowStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"rowStyles\", \"props\": { \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/common/RowType.tsx#rowStyles\"] = { docgenInfo: rowStyles.__docgenInfo, name: \"rowStyles\", path: \"src/common/RowType.tsx#rowStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export const GUTTER_WIDTH = 15;\nexport const DEFAULT_PADDING = 20;\n","import { Dictionary, ISchema } from '@stoplight/types';\nimport { ICommonProps } from '../types';\nimport { buildAllOfSchema } from '../util/buildAllOfSchema';\nimport { renderProps } from './renderProps';\n\nexport interface IRenderAllProps extends ICommonProps {\n  level: number;\n  props: Dictionary<ISchema>;\n}\n\nexport const renderAllOf = ({\n  schemas,\n  level,\n  rowElems,\n  props,\n  toggleExpandRow,\n  expandedRows,\n  defaultExpandedDepth,\n  hideInheritedFrom,\n  jsonPath,\n}: IRenderAllProps) => {\n  const schema = buildAllOfSchema(props);\n\n  return renderProps({\n    schemas,\n    props: schema.properties || {},\n    required: schema.required || [],\n    level: level + 1,\n    rowElems,\n    toggleExpandRow,\n    expandedRows,\n    defaultExpandedDepth,\n    hideInheritedFrom,\n    jsonPath,\n  });\n};\ntry {\n    // @ts-ignore\n    renderAllOf.displayName = \"renderAllOf\";\n    // @ts-ignore\n    renderAllOf.__docgenInfo = { \"description\": \"\", \"displayName\": \"renderAllOf\", \"props\": { \"level\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"level\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"props\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"props\", \"required\": true, \"type\": { \"name\": \"Dictionary<ISchema, string>\" } }, \"schemas\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schemas\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"schema\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schema\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"defaultExpandedDepth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"defaultExpandedDepth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"prop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"prop\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"parentName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"parentName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"rowElems\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rowElems\", \"required\": true, \"type\": { \"name\": \"ReactNodeArray\" } }, \"expandedRows\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"expandedRows\", \"required\": true, \"type\": { \"name\": \"Dictionary<boolean, string>\" } }, \"jsonPath\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"jsonPath\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"propName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"propName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"required\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"required\", \"required\": false, \"type\": { \"name\": \"boolean | string[]\" } }, \"hideInheritedFrom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideInheritedFrom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hideRoot\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideRoot\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"toggleExpandRow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toggleExpandRow\", \"required\": true, \"type\": { \"name\": \"(rowKey: string, expanded: boolean) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/renderers/renderAllOf.tsx#renderAllOf\"] = { docgenInfo: renderAllOf.__docgenInfo, name: \"renderAllOf\", path: \"src/renderers/renderAllOf.tsx#renderAllOf\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { Dictionary, ISchema } from '@stoplight/types';\nimport has = require('lodash/has');\nimport set = require('lodash/set');\nimport { ICommonProps } from '../types';\nimport { renderProp } from './renderProp';\nimport { renderRowDivider } from './renderRowDivider';\nimport { renderSchema } from './renderSchema';\n\nexport interface IRenderCombinerProp extends ICommonProps {\n  defaultType?: string;\n  props: Dictionary<ISchema>;\n  level: number;\n}\n\nexport const renderCombiner = ({\n  schemas,\n  level,\n  parentName,\n  defaultType,\n  rowElems,\n  props,\n  toggleExpandRow,\n  expandedRows,\n  defaultExpandedDepth,\n  hideInheritedFrom,\n  jsonPath,\n}: IRenderCombinerProp) => {\n  for (const [e, elem] of Object.entries(props)) {\n    if (!has(elem, 'type') && defaultType) {\n      set(elem, 'type', defaultType);\n    }\n\n    const key = `${parentName}-c-${level}-${e}`;\n\n    const nextLevel = level === 0 && (elem.properties || elem.items) ? 1 : level;\n    const commonProps = {\n      schemas,\n      parentName,\n      rowElems,\n      toggleExpandRow,\n      expandedRows,\n      defaultExpandedDepth,\n      level: nextLevel,\n      hideInheritedFrom,\n      jsonPath: `${jsonPath}.${e}`,\n    };\n\n    if (elem.properties) {\n      if (!elem.type) {\n        elem.type = 'object';\n      }\n      rowElems = renderProp({ ...commonProps, prop: elem });\n    } else if (elem.items) {\n      if (!elem.type) {\n        elem.type = 'array';\n      }\n      rowElems = renderProp({ ...commonProps, prop: elem });\n    } else {\n      rowElems = renderSchema({\n        ...commonProps,\n        schema: elem,\n        ...((elem.properties || elem.items) !== undefined && { name: key }),\n      });\n    }\n\n    if (props[parseInt(e) + 1]) {\n      rowElems.push(renderRowDivider({ key, level, text: 'or' }));\n    }\n  }\n\n  return rowElems;\n};\ntry {\n    // @ts-ignore\n    renderCombiner.displayName = \"renderCombiner\";\n    // @ts-ignore\n    renderCombiner.__docgenInfo = { \"description\": \"\", \"displayName\": \"renderCombiner\", \"props\": { \"defaultType\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"defaultType\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"props\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"props\", \"required\": true, \"type\": { \"name\": \"Dictionary<ISchema, string>\" } }, \"level\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"level\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"schemas\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schemas\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"schema\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schema\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"defaultExpandedDepth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"defaultExpandedDepth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"prop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"prop\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"parentName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"parentName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"rowElems\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rowElems\", \"required\": true, \"type\": { \"name\": \"ReactNodeArray\" } }, \"expandedRows\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"expandedRows\", \"required\": true, \"type\": { \"name\": \"Dictionary<boolean, string>\" } }, \"jsonPath\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"jsonPath\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"propName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"propName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"required\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"required\", \"required\": false, \"type\": { \"name\": \"boolean | string[]\" } }, \"hideInheritedFrom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideInheritedFrom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hideRoot\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideRoot\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"toggleExpandRow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toggleExpandRow\", \"required\": true, \"type\": { \"name\": \"(rowKey: string, expanded: boolean) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/renderers/renderCombiner.tsx#renderCombiner\"] = { docgenInfo: renderCombiner.__docgenInfo, name: \"renderCombiner\", path: \"src/renderers/renderCombiner.tsx#renderCombiner\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","/* @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Box, Flex, Icon, IconLibrary } from '@stoplight/ui-kit';\nimport has = require('lodash/has');\nimport isEmpty = require('lodash/isEmpty');\nimport isString = require('lodash/isString');\nimport { ReactNode, ReactNodeArray } from 'react';\n\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons/faCaretDown';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons/faCaretRight';\nimport { ErrorMessage } from '../common/ErrorMessage';\nimport { MutedText } from '../common/MutedText';\nimport { Row } from '../common/Row';\nimport { RowType } from '../common/RowType';\nimport { PropValidations } from '../PropValidations';\nimport { useTheme } from '../theme';\nimport { ICommonProps } from '../types';\nimport { getProps } from '../util/getProps';\nimport { validationText } from '../util/validationText';\nimport { renderAllOf } from './renderAllOf';\nimport { renderCombiner } from './renderCombiner';\nimport { renderProps } from './renderProps';\n\nIconLibrary.add(faCaretRight, faCaretDown);\n\nexport interface IRenderProp extends ICommonProps {\n  level: number;\n}\n\nexport const renderProp = ({\n  schemas,\n  level,\n  parentName,\n  rowElems,\n  propName,\n  prop,\n  required,\n  toggleExpandRow,\n  expandedRows,\n  defaultExpandedDepth,\n  hideInheritedFrom,\n  jsonPath,\n  hideRoot,\n}: IRenderProp) => {\n  const theme = useTheme();\n  const position = rowElems.length;\n  const name = propName;\n  const rowKey = jsonPath;\n\n  if (!prop) {\n    rowElems.push(\n      <Row as={ErrorMessage} key={position} py={7} level={level}>\n        Could not render prop. Is it valid? If it is a $ref, does the $ref exist?\n      </Row>\n    );\n\n    return rowElems;\n  }\n\n  let propType;\n  let childPropType: 'object' | 'anyOf' | 'oneOf' | 'array';\n  let isBasic = false;\n  let expandable = false;\n  const expanded = has(expandedRows, rowKey) ? expandedRows[rowKey] : expandedRows.all || level <= defaultExpandedDepth;\n\n  if (prop.items) {\n    if (prop.items.allOf) {\n      childPropType = 'object';\n    } else if (prop.items.anyOf) {\n      childPropType = 'anyOf';\n    } else if (prop.items.oneOf) {\n      childPropType = 'oneOf';\n    } else if (prop.items.type) {\n      childPropType = prop.items.type;\n    }\n\n    propType = prop.type;\n    isBasic = true;\n\n    if (\n      prop.items.properties ||\n      prop.items.patternProperties ||\n      prop.items.allOf ||\n      prop.items.oneOf ||\n      prop.items.anyOf\n    ) {\n      expandable = true;\n    }\n  } else if (prop.oneOf) {\n    propType = 'oneOf';\n    expandable = !isEmpty(prop.oneOf);\n  } else if (prop.anyOf) {\n    propType = 'anyOf';\n    expandable = !isEmpty(prop.anyOf);\n  } else if (prop.allOf) {\n    propType = 'object';\n    expandable = !isEmpty(prop.allOf);\n  } else {\n    propType = prop.type;\n    isBasic = !!(prop.properties || prop.patternProperties || propType === 'object');\n\n    if (prop.properties || prop.patternProperties) {\n      expandable = true;\n    }\n  }\n\n  if (jsonPath === 'root') expandable = false;\n\n  let types: string[] = [];\n  if (isString(propType)) {\n    types = [propType];\n  } else {\n    types = propType;\n  }\n\n  let typeElems: ReactNodeArray = [];\n  if (!isEmpty(types)) {\n    typeElems = types.reduce((acc: ReactNode[], type: string, i) => {\n      acc.push(\n        <RowType as=\"span\" type={type} key={i}>\n          {type === 'array' && childPropType && childPropType !== 'array' ? `array[${childPropType}]` : type}\n        </RowType>\n      );\n\n      if (types[i + 1]) {\n        acc.push(\n          <MutedText as=\"span\" key={`${i}-sep`}>\n            {' or '}\n          </MutedText>\n        );\n      }\n\n      return acc;\n    }, []);\n  } else if (prop.$ref) {\n    typeElems.push(<RowType as=\"span\" type=\"$ref\" key=\"prop-ref\">{`{${prop.$ref}}`}</RowType>);\n  } else if (prop.__error || isBasic) {\n    typeElems.push(\n      <Box as=\"span\" key=\"no-types\" color={theme.canvas.error}>\n        {prop.__error || 'ERROR_NO_TYPE'}\n      </Box>\n    );\n  }\n\n  let requiredElem;\n\n  const vt = validationText(prop);\n  const showVt = !expanded && vt;\n\n  if (required || vt) {\n    requiredElem = (\n      <Box fontSize=\"0.75rem\">\n        {showVt ? <MutedText as=\"span\">{vt}</MutedText> : null}\n        {showVt && required ? <MutedText as=\"span\"> + </MutedText> : null}\n        {required ? (\n          <Box as=\"span\" fontWeight={700}>\n            required\n          </Box>\n        ) : null}\n      </Box>\n    );\n  }\n\n  const showInheritedFrom = !hideInheritedFrom && !isEmpty(prop.__inheritedFrom);\n\n  if (!(hideRoot && jsonPath === 'root')) {\n    rowElems.push(\n      <Row\n        as={Flex}\n        alignItems=\"center\"\n        position=\"relative\"\n        py={7}\n        key={position}\n        level={level}\n        cursor={vt || expandable ? 'pointer' : 'default'}\n        onClick={() => {\n          if (vt || expandable) {\n            toggleExpandRow(rowKey, !expanded);\n          }\n        }}\n      >\n        {expandable ? (\n          <Flex justifyContent=\"center\" pl=\"0.5rem\" mr=\"0.5rem\" ml=\"-1.5rem\" width=\"1rem\">\n            <Icon fontSize=\"1em\" icon={expanded ? faCaretDown : faCaretRight} />\n          </Flex>\n        ) : null}\n\n        <Box flex=\"1 1 0%\">\n          <Flex alignItems=\"baseline\">\n            {name && name !== 'root' ? <Box mr={11}>{name}</Box> : null}\n\n            {!isEmpty(typeElems) && <div>{typeElems}</div>}\n          </Flex>\n\n          {!isEmpty(prop.description) ? (\n            <MutedText pt={4} fontSize=\".875rem\">\n              {prop.description}\n            </MutedText>\n          ) : null}\n        </Box>\n\n        {requiredElem || showInheritedFrom || expanded ? (\n          <Box maxWidth=\"30rem\" textAlign=\"right\" fontSize=\".75rem\" pr={11}>\n            {requiredElem}\n\n            {showInheritedFrom ? <MutedText>{`$ref:${prop.__inheritedFrom.name}`}</MutedText> : null}\n\n            {expanded && <PropValidations prop={prop} />}\n          </Box>\n        ) : null}\n      </Row>\n    );\n  }\n\n  const properties = getProps({ parsed: prop });\n  const requiredElems = prop.items ? prop.items.required : prop.required;\n  const commonProps = {\n    schemas,\n    rowElems,\n    toggleExpandRow,\n    expandedRows,\n    defaultExpandedDepth,\n    parentName: name,\n    props: properties,\n    hideInheritedFrom,\n    jsonPath,\n    required: requiredElems || [],\n  };\n\n  if (expanded || jsonPath === 'root') {\n    if (properties && Object.keys(properties).length) {\n      rowElems = renderProps({\n        ...commonProps,\n        props: properties,\n        level: level + 1,\n      });\n    } else if (prop.items) {\n      if (prop.items.allOf) {\n        rowElems = renderAllOf({\n          ...commonProps,\n          props: prop.items.allOf,\n          level,\n        });\n      } else if (prop.items.oneOf) {\n        rowElems = renderCombiner({\n          ...commonProps,\n          props: prop.items.oneOf,\n          level: level + 1,\n          defaultType: prop.items.type,\n        });\n      } else if (prop.items.anyOf) {\n        rowElems = renderCombiner({\n          ...commonProps,\n          props: prop.items.anyOf,\n          level: level + 1,\n          defaultType: prop.items.type,\n        });\n      }\n    } else if (prop.allOf) {\n      rowElems = renderAllOf({\n        ...commonProps,\n        props: prop.allOf,\n        level,\n      });\n    } else if (prop.oneOf) {\n      rowElems = renderCombiner({\n        ...commonProps,\n        props: prop.oneOf,\n        level: level + 1,\n        ...(prop.type && { defaultType: prop.type }),\n      });\n    } else if (prop.anyOf) {\n      rowElems = renderCombiner({\n        ...commonProps,\n        props: prop.anyOf,\n        level: level + 1,\n        ...(prop.type && { defaultType: prop.type }),\n      });\n    }\n  }\n\n  return rowElems;\n};\ntry {\n    // @ts-ignore\n    renderProp.displayName = \"renderProp\";\n    // @ts-ignore\n    renderProp.__docgenInfo = { \"description\": \"\", \"displayName\": \"renderProp\", \"props\": { \"level\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"level\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"schemas\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schemas\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"schema\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schema\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"defaultExpandedDepth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"defaultExpandedDepth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"prop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"prop\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"parentName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"parentName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"rowElems\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rowElems\", \"required\": true, \"type\": { \"name\": \"ReactNodeArray\" } }, \"expandedRows\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"expandedRows\", \"required\": true, \"type\": { \"name\": \"Dictionary<boolean, string>\" } }, \"jsonPath\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"jsonPath\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"propName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"propName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"required\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"required\", \"required\": false, \"type\": { \"name\": \"boolean | string[]\" } }, \"hideInheritedFrom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideInheritedFrom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hideRoot\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideRoot\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"toggleExpandRow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toggleExpandRow\", \"required\": true, \"type\": { \"name\": \"(rowKey: string, expanded: boolean) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/renderers/renderProp.tsx#renderProp\"] = { docgenInfo: renderProp.__docgenInfo, name: \"renderProp\", path: \"src/renderers/renderProp.tsx#renderProp\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { Dictionary, ISchema } from '@stoplight/types';\nimport { ICommonProps } from '../types';\nimport { renderProp } from './renderProp';\n\nexport interface IRenderProps extends ICommonProps {\n  level: number;\n  props: Dictionary<ISchema>;\n  required: string[];\n}\n\nexport const renderProps = ({\n  schemas,\n  level,\n  parentName,\n  rowElems,\n  props,\n  required,\n  toggleExpandRow,\n  expandedRows,\n  defaultExpandedDepth,\n  hideInheritedFrom,\n  jsonPath,\n}: IRenderProps) => {\n  for (const [propName, propValue] of Object.entries(props)) {\n    renderProp({\n      schemas,\n      level,\n      parentName,\n      rowElems,\n      toggleExpandRow,\n      expandedRows,\n      defaultExpandedDepth,\n      propName,\n      prop: propValue,\n      required: required !== undefined && required.includes(propName),\n      hideInheritedFrom,\n      jsonPath: `${jsonPath}.${propName}`,\n    });\n  }\n\n  return rowElems;\n};\ntry {\n    // @ts-ignore\n    renderProps.displayName = \"renderProps\";\n    // @ts-ignore\n    renderProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"renderProps\", \"props\": { \"level\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"level\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"props\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"props\", \"required\": true, \"type\": { \"name\": \"Dictionary<ISchema, string>\" } }, \"required\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"required\", \"required\": true, \"type\": { \"name\": \"string[]\" } }, \"schemas\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schemas\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"schema\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schema\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"defaultExpandedDepth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"defaultExpandedDepth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"prop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"prop\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"parentName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"parentName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"rowElems\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rowElems\", \"required\": true, \"type\": { \"name\": \"ReactNodeArray\" } }, \"expandedRows\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"expandedRows\", \"required\": true, \"type\": { \"name\": \"Dictionary<boolean, string>\" } }, \"jsonPath\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"jsonPath\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"propName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"propName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"hideInheritedFrom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideInheritedFrom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hideRoot\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideRoot\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"toggleExpandRow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toggleExpandRow\", \"required\": true, \"type\": { \"name\": \"(rowKey: string, expanded: boolean) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/renderers/renderProps.tsx#renderProps\"] = { docgenInfo: renderProps.__docgenInfo, name: \"renderProps\", path: \"src/renderers/renderProps.tsx#renderProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","/* @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Box, Flex } from '@stoplight/ui-kit';\nimport { FunctionComponent } from 'react';\nimport { MutedText } from '../common/MutedText';\nimport { DEFAULT_PADDING, GUTTER_WIDTH } from '../consts';\nimport { useTheme } from '../theme';\n\ninterface IRowDivider {\n  key: string;\n  level: number;\n  text: string;\n}\n\nexport const renderRowDivider: FunctionComponent<IRowDivider> = ({ key, level, text }) => {\n  const theme = useTheme();\n\n  return (\n    <Flex alignItems=\"center\" key={`${key}-d`} height=\"2.5rem\" pl={DEFAULT_PADDING + GUTTER_WIDTH * (level - 1)}>\n      <MutedText fontSize=\".875rem\" textTransform=\"uppercase\" pr={11}>\n        {text}\n      </MutedText>\n      <Box backgroundColor={theme.divider.bg} height=\"1px\" mr={15} flex=\"1 1 0%\" />\n    </Flex>\n  );\n};\ntry {\n    // @ts-ignore\n    renderRowDivider.displayName = \"renderRowDivider\";\n    // @ts-ignore\n    renderRowDivider.__docgenInfo = { \"description\": \"\", \"displayName\": \"renderRowDivider\", \"props\": { \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"level\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"level\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"text\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"text\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/renderers/renderRowDivider.tsx#renderRowDivider\"] = { docgenInfo: renderRowDivider.__docgenInfo, name: \"renderRowDivider\", path: \"src/renderers/renderRowDivider.tsx#renderRowDivider\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import includes = require('lodash/includes');\nimport isEmpty = require('lodash/isEmpty');\nimport pick = require('lodash/pick');\nimport { ICommonProps } from '../types';\nimport { renderAllOf } from './renderAllOf';\nimport { renderCombiner } from './renderCombiner';\nimport { renderProp } from './renderProp';\n\nexport interface IRenderSchemaProps extends ICommonProps {\n  level: number;\n  name?: string;\n}\n\nexport const renderSchema = ({\n  schemas,\n  schema,\n  level,\n  name,\n  rowElems,\n  toggleExpandRow,\n  expandedRows,\n  defaultExpandedDepth,\n  hideInheritedFrom,\n  jsonPath,\n  hideRoot,\n}: IRenderSchemaProps) => {\n  if (!schema || isEmpty(schema)) {\n    return rowElems;\n  }\n\n  const nextLevel = level;\n  const commonProps: ICommonProps = {\n    schemas,\n    rowElems,\n    toggleExpandRow,\n    expandedRows,\n    defaultExpandedDepth,\n    parentName: name,\n    propName: name,\n    required: includes(schema.required || [], name),\n    hideInheritedFrom,\n    jsonPath,\n    hideRoot,\n  };\n\n  if (schema.properties) {\n    const prop = {\n      ...schema,\n      type: 'object',\n      description: schema.description,\n    };\n\n    if (!hideInheritedFrom && schema.__inheritedFrom) {\n      Object.assign(prop, pick(schema, '__inheritedFrom'));\n    }\n\n    rowElems = renderProp({\n      ...commonProps,\n      level,\n      prop,\n    });\n  } else if (schema.items) {\n    return renderProp({\n      ...commonProps,\n      level: nextLevel,\n      prop: schema,\n    });\n  } else if (schema.allOf) {\n    return renderAllOf({\n      ...commonProps,\n      level: nextLevel,\n      props: schema.allOf,\n    });\n  } else if (schema.oneOf) {\n    return renderCombiner({\n      ...commonProps,\n      level: nextLevel,\n      props: schema.oneOf,\n      defaultType: schema.type,\n    });\n  } else if (schema.anyOf) {\n    return renderCombiner({\n      ...commonProps,\n      level: nextLevel,\n      props: schema.anyOf,\n      defaultType: schema.type,\n    });\n  } else if (schema.type) {\n    return renderProp({\n      ...commonProps,\n      level: nextLevel,\n      prop: schema,\n    });\n  }\n\n  return rowElems;\n};\ntry {\n    // @ts-ignore\n    renderSchema.displayName = \"renderSchema\";\n    // @ts-ignore\n    renderSchema.__docgenInfo = { \"description\": \"\", \"displayName\": \"renderSchema\", \"props\": { \"level\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"level\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"schemas\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schemas\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"schema\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"schema\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"defaultExpandedDepth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"defaultExpandedDepth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"prop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"prop\", \"required\": false, \"type\": { \"name\": \"ISchema\" } }, \"parentName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"parentName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"rowElems\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rowElems\", \"required\": true, \"type\": { \"name\": \"ReactNodeArray\" } }, \"expandedRows\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"expandedRows\", \"required\": true, \"type\": { \"name\": \"Dictionary<boolean, string>\" } }, \"jsonPath\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"jsonPath\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"propName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"propName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"required\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"required\", \"required\": false, \"type\": { \"name\": \"boolean | string[]\" } }, \"hideInheritedFrom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideInheritedFrom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hideRoot\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideRoot\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"toggleExpandRow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toggleExpandRow\", \"required\": true, \"type\": { \"name\": \"(rowKey: string, expanded: boolean) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/renderers/renderSchema.tsx#renderSchema\"] = { docgenInfo: renderSchema.__docgenInfo, name: \"renderSchema\", path: \"src/renderers/renderSchema.tsx#renderSchema\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { createThemedModule } from '@stoplight/ui-kit';\nimport { IJSONSchemaViewerTheme } from './types';\n\nexport type themeZones = 'json-schema-viewer';\n\nexport const { useTheme, ThemeZone, ThemeProvider } = createThemedModule<themeZones, IJSONSchemaViewerTheme>();\ntry {\n    // @ts-ignore\n    ThemeZone.displayName = \"ThemeZone\";\n    // @ts-ignore\n    ThemeZone.__docgenInfo = { \"description\": \"\", \"displayName\": \"ThemeZone\", \"props\": { \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": true, \"type\": { \"name\": \"\\\"json-schema-viewer\\\"\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/theme.ts#ThemeZone\"] = { docgenInfo: ThemeZone.__docgenInfo, name: \"ThemeZone\", path: \"src/theme.ts#ThemeZone\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    ThemeProvider.displayName = \"ThemeProvider\";\n    // @ts-ignore\n    ThemeProvider.__docgenInfo = { \"description\": \"\", \"displayName\": \"ThemeProvider\", \"props\": { \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": false, \"type\": { \"name\": \"IJSONSchemaViewerTheme\" } }, \"zones\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"zones\", \"required\": false, \"type\": { \"name\": \"Dictionary<ThemeZone<IJSONSchemaViewerTheme>, \\\"json-schema-viewer\\\">\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/theme.ts#ThemeProvider\"] = { docgenInfo: ThemeProvider.__docgenInfo, name: \"ThemeProvider\", path: \"src/theme.ts#ThemeProvider\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { Dictionary, ISchema } from '@stoplight/types';\nimport isArray = require('lodash/isArray');\nimport merge = require('lodash/merge');\nimport union = require('lodash/union');\n\ntype buildAllOfSchema = (props: Dictionary<ISchema>, schema?: ISchema) => ISchema;\n\nexport const buildAllOfSchema: buildAllOfSchema = (props, schema = {}) => {\n  for (const targetElems of Object.values<ISchema>(props)) {\n    // nested allOf, for example, allOf -> $ref -> allOf\n    if (targetElems.allOf) {\n      buildAllOfSchema({ elems: targetElems.allOf, schema });\n    } else {\n      for (const key in targetElems) {\n        if (isArray(targetElems[key])) {\n          schema[key] = union(schema[key], targetElems[key]);\n        } else if (typeof targetElems[key] === 'object') {\n          schema[key] = merge(schema[key], targetElems[key]);\n        } else {\n          schema[key] = targetElems[key];\n        }\n      }\n    }\n  }\n\n  return schema;\n};\ntry {\n    // @ts-ignore\n    buildAllOfSchema.displayName = \"buildAllOfSchema\";\n    // @ts-ignore\n    buildAllOfSchema.__docgenInfo = { \"description\": \"\", \"displayName\": \"buildAllOfSchema\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/util/buildAllOfSchema.ts#buildAllOfSchema\"] = { docgenInfo: buildAllOfSchema.__docgenInfo, name: \"buildAllOfSchema\", path: \"src/util/buildAllOfSchema.ts#buildAllOfSchema\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import merge = require('lodash/merge');\n\nexport const getProps = ({ parsed = {} }: any) => {\n  const target = parsed.items || parsed;\n\n  let props = target.properties || {};\n  if (target.patternProperties) {\n    if (props) {\n      props = merge(target.patternProperties, props);\n    } else {\n      props = target.patternProperties;\n    }\n  }\n\n  return props;\n};\ntry {\n    // @ts-ignore\n    getProps.displayName = \"getProps\";\n    // @ts-ignore\n    getProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"getProps\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/util/getProps.ts#getProps\"] = { docgenInfo: getProps.__docgenInfo, name: \"getProps\", path: \"src/util/getProps.ts#getProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { ISchema } from '@stoplight/types';\n\nexport const isCombiner = (prop: ISchema) => !!(prop.allOf || prop.anyOf || prop.oneOf);\ntry {\n    // @ts-ignore\n    isCombiner.displayName = \"isCombiner\";\n    // @ts-ignore\n    isCombiner.__docgenInfo = { \"description\": \"\", \"displayName\": \"isCombiner\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/util/isCombiner.ts#isCombiner\"] = { docgenInfo: isCombiner.__docgenInfo, name: \"isCombiner\", path: \"src/util/isCombiner.ts#isCombiner\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { ISchema } from '@stoplight/types';\nimport get = require('lodash/get');\nimport isEmpty = require('lodash/isEmpty');\n\nconst combinerTypes = ['allOf', 'oneOf', 'anyOf'];\n\nexport const isSchemaViewerEmpty = (schema: ISchema) => {\n  const objectKeys = Object.keys(schema);\n\n  if (objectKeys.length === 1 && combinerTypes.includes(objectKeys[0])) {\n    return isEmpty(get(schema, objectKeys[0], []));\n  }\n\n  return false;\n};\ntry {\n    // @ts-ignore\n    isSchemaViewerEmpty.displayName = \"isSchemaViewerEmpty\";\n    // @ts-ignore\n    isSchemaViewerEmpty.__docgenInfo = { \"description\": \"\", \"displayName\": \"isSchemaViewerEmpty\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/util/isSchemaViewerEmpty.ts#isSchemaViewerEmpty\"] = { docgenInfo: isSchemaViewerEmpty.__docgenInfo, name: \"isSchemaViewerEmpty\", path: \"src/util/isSchemaViewerEmpty.ts#isSchemaViewerEmpty\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import isEmpty = require('lodash/isEmpty');\nimport merge = require('lodash/merge');\nimport omit = require('lodash/omit');\n\nexport const pickValidations = (prop: any) => {\n  const validations = {};\n  if (prop.enum && prop.enum.join) {\n    validations['Allowed Values'] = prop.enum.join(', ');\n  } else if (prop.enum) {\n    validations['Allowed Values'] = prop.enum;\n  } else if (prop.items && !isEmpty(prop.items.enum)) {\n    validations['Allowed Values'] = prop.items.enum.join(', ');\n  }\n\n  merge(\n    validations,\n    omit(\n      prop,\n      'title',\n      'description',\n      'type',\n      'enum',\n      'properties',\n      'items',\n      'additionalProperties',\n      '$ref',\n      '_active',\n      '_isOpen',\n      'required',\n      'xml',\n      'patternProperties',\n      '__inheritedFrom',\n      '__error'\n    )\n  );\n\n  return validations;\n};\ntry {\n    // @ts-ignore\n    pickValidations.displayName = \"pickValidations\";\n    // @ts-ignore\n    pickValidations.__docgenInfo = { \"description\": \"\", \"displayName\": \"pickValidations\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/util/pickValidations.ts#pickValidations\"] = { docgenInfo: pickValidations.__docgenInfo, name: \"pickValidations\", path: \"src/util/pickValidations.ts#pickValidations\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { ISchema } from '@stoplight/types';\nimport { isCombiner } from './isCombiner';\nimport { pickValidations } from './pickValidations';\n\nexport const validationText = (prop: ISchema) => {\n  if (!isCombiner(prop)) {\n    const validationCount = Object.keys(pickValidations(prop)).length;\n\n    if (validationCount) {\n      return `${validationCount} validation${validationCount > 1 ? 's' : ''}`;\n    }\n  }\n\n  return '';\n};\ntry {\n    // @ts-ignore\n    validationText.displayName = \"validationText\";\n    // @ts-ignore\n    validationText.__docgenInfo = { \"description\": \"\", \"displayName\": \"validationText\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/util/validationText.ts#validationText\"] = { docgenInfo: validationText.__docgenInfo, name: \"validationText\", path: \"src/util/validationText.ts#validationText\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;;AACA;AACA;AACA;AA0DA;AAvDA;AACA;AACA;AAEA;AACA;AAgBA;AACA;AAEA;AAGA;AAGA;AACA;AAEA;AAGA;AAEA;AAEA;AAcA;AACA;AA7DA;AA8DA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;AC3FA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;;AAAA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;;AAAA;AAGA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACtDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBA;AACA;AAYA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AACA;AAIA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAOA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;AC1HA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;;;;;;;;;;;;;;;;ACCA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAKA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAKA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AAQA;AACA;AAEA;AAEA;AAEA;;;;;AAKA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AClEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAKA;AAQA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACnDA;AACA;;;;;;;;;;;;;;;ACCA;AACA;AAOA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;AC7CA;AACA;AAEA;AACA;AACA;AAQA;AAaA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAKA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAKA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAOA;AAEA;AAEA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AACA;AACA;AAEA;AAGA;AAOA;AAEA;AAEA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AAMA;AAAA;AACA;AAMA;AACA;AAAA;AACA;AAKA;AAAA;AACA;AAMA;AAAA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACnSA;AAQA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACnDA;AACA;AAEA;AACA;AACA;AAQA;AACA;AAEA;AAEA;AAGA;AAGA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AAEA;AACA;AACA;AAOA;AAaA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AAEA;AAGA;AAEA;AAAA;AACA;AAKA;AAAA;AACA;AAKA;AAAA;AACA;AAMA;AAAA;AACA;AAMA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AC3GA;AAKA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACrCA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAsBA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;AC/CA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}